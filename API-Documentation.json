{
  "_type": "export",
  "__export_format": 4,
  "__export_date": "2025-09-02T00:00:00.000Z",
  "__export_source": "insomnia.desktop.app:v2023.5.8",
  "resources": [
    {
      "_id": "req_root",
      "parentId": "wrk_main",
      "_type": "request_group",
      "name": "Neat Shoecare API",
      "description": "API endpoints for Neat Shoecare service management",
      "environment": {}
    },
    {
      "_id": "env_base",
      "parentId": "wrk_main",
      "_type": "environment",
      "name": "Base Environment",
      "data": {
        "base_url": "https://api.neatshoecare.com",
        "bearer_token": "",
        "category_id": "60b8d295f9e1b2c3d4567890",
        "service_id": "60b8d295f9e1b2c3d4567891",
        "order_id": "60b8d295f9e1b2c3d4567892",
        "group_id": "60b8d295f9e1b2c3d4567893",
        "unique_code": "ABC123"
      },
      "dataPropertyOrder": {
        "&": ["base_url", "bearer_token", "category_id", "service_id", "order_id", "group_id", "unique_code"]
      },
      "color": null,
      "isPrivate": false,
      "metaSortKey": 1
    },
    {
      "_id": "wrk_main",
      "_type": "workspace",
      "name": "Neat Shoecare API",
      "description": "Workspace for Neat Shoecare API testing"
    },
    {
      "_id": "fld_app",
      "parentId": "req_root",
      "_type": "request_group",
      "name": "App",
      "description": "Application status endpoints"
    },
    {
      "_id": "req_app_status",
      "parentId": "fld_app",
      "_type": "request",
      "url": "{{ _.base_url }}/",
      "name": "Get API Status",
      "description": "Check API status",
      "method": "GET",
      "body": {},
      "parameters": [],
      "headers": [],
      "authentication": {},
      "metaSortKey": -1
    },
    {
      "_id": "fld_auth",
      "parentId": "req_root",
      "_type": "request_group",
      "name": "Authentication",
      "description": "Authentication endpoints"
    },
    {
      "_id": "req_google_auth",
      "parentId": "fld_auth",
      "_type": "request",
      "url": "{{ _.base_url }}/auth/google",
      "name": "Google OAuth Login",
      "description": "Initiate Google OAuth login",
      "method": "GET",
      "body": {},
      "parameters": [],
      "headers": [],
      "authentication": {},
      "metaSortKey": -1
    },
    {
      "_id": "req_google_callback",
      "parentId": "fld_auth",
      "_type": "request",
      "url": "{{ _.base_url }}/auth/google/callback",
      "name": "Google OAuth Callback",
      "description": "Google OAuth callback endpoint",
      "method": "GET",
      "body": {},
      "parameters": [],
      "headers": [],
      "authentication": {},
      "metaSortKey": -2
    },
    {
      "_id": "req_logout",
      "parentId": "fld_auth",
      "_type": "request",
      "url": "{{ _.base_url }}/auth/logout",
      "name": "Logout",
      "description": "Logout user",
      "method": "POST",
      "body": {},
      "parameters": [],
      "headers": [],
      "authentication": {
        "type": "bearer",
        "token": "{{ _.bearer_token }}"
      },
      "metaSortKey": -3
    },
    {
      "_id": "req_profile",
      "parentId": "fld_auth",
      "_type": "request",
      "url": "{{ _.base_url }}/auth/profile",
      "name": "Get Profile",
      "description": "Get user profile information",
      "method": "GET",
      "body": {},
      "parameters": [],
      "headers": [],
      "authentication": {
        "type": "bearer",
        "token": "{{ _.bearer_token }}"
      },
      "metaSortKey": -4
    },
    {
      "_id": "fld_category",
      "parentId": "req_root",
      "_type": "request_group",
      "name": "Category Service",
      "description": "Category service management endpoints"
    },
    {
      "_id": "req_create_category",
      "parentId": "fld_category",
      "_type": "request",
      "url": "{{ _.base_url }}/category-service",
      "name": "Create Category Service",
      "description": "Create a new category service",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n  \"name\": \"Cleaning Service\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {
        "type": "bearer",
        "token": "{{ _.bearer_token }}"
      },
      "metaSortKey": -1
    },
    {
      "_id": "req_get_all_categories",
      "parentId": "fld_category",
      "_type": "request",
      "url": "{{ _.base_url }}/category-service",
      "name": "Get All Category Services",
      "description": "Retrieve all category services",
      "method": "GET",
      "body": {},
      "parameters": [],
      "headers": [],
      "authentication": {
        "type": "bearer",
        "token": "{{ _.bearer_token }}"
      },
      "metaSortKey": -2
    },
    {
      "_id": "req_get_category_by_id",
      "parentId": "fld_category",
      "_type": "request",
      "url": "{{ _.base_url }}/category-service/{{ _.category_id }}",
      "name": "Get Category Service by ID",
      "description": "Retrieve category service by ID",
      "method": "GET",
      "body": {},
      "parameters": [],
      "headers": [],
      "authentication": {
        "type": "bearer",
        "token": "{{ _.bearer_token }}"
      },
      "metaSortKey": -3
    },
    {
      "_id": "req_update_category",
      "parentId": "fld_category",
      "_type": "request",
      "url": "{{ _.base_url }}/category-service/{{ _.category_id }}",
      "name": "Update Category Service",
      "description": "Update existing category service",
      "method": "PATCH",
      "body": {
        "mimeType": "application/json",
        "text": "{\n  \"name\": \"Deep Cleaning Service\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {
        "type": "bearer",
        "token": "{{ _.bearer_token }}"
      },
      "metaSortKey": -4
    },
    {
      "_id": "req_delete_category",
      "parentId": "fld_category",
      "_type": "request",
      "url": "{{ _.base_url }}/category-service/{{ _.category_id }}",
      "name": "Delete Category Service",
      "description": "Soft delete category service",
      "method": "DELETE",
      "body": {},
      "parameters": [],
      "headers": [],
      "authentication": {
        "type": "bearer",
        "token": "{{ _.bearer_token }}"
      },
      "metaSortKey": -5
    },
    {
      "_id": "req_restore_category",
      "parentId": "fld_category",
      "_type": "request",
      "url": "{{ _.base_url }}/category-service/{{ _.category_id }}/restore",
      "name": "Restore Category Service",
      "description": "Restore deleted category service",
      "method": "PATCH",
      "body": {},
      "parameters": [],
      "headers": [],
      "authentication": {
        "type": "bearer",
        "token": "{{ _.bearer_token }}"
      },
      "metaSortKey": -6
    },
    {
      "_id": "fld_service",
      "parentId": "req_root",
      "_type": "request_group",
      "name": "Service",
      "description": "Service management endpoints"
    },
    {
      "_id": "req_create_service",
      "parentId": "fld_service",
      "_type": "request",
      "url": "{{ _.base_url }}/service",
      "name": "Create Service",
      "description": "Create a new service",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n  \"name\": \"Premium Shoe Cleaning\",\n  \"categoryId\": \"{{ _.category_id }}\",\n  \"price\": 50000,\n  \"description\": \"Deep cleaning service for leather shoes\",\n  \"duration\": \"2-3 hours\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {
        "type": "bearer",
        "token": "{{ _.bearer_token }}"
      },
      "metaSortKey": -1
    },
    {
      "_id": "req_get_all_services",
      "parentId": "fld_service",
      "_type": "request",
      "url": "{{ _.base_url }}/service",
      "name": "Get All Services",
      "description": "Retrieve all services with optional category filter",
      "method": "GET",
      "body": {},
      "parameters": [
        {
          "name": "categoryId",
          "value": "{{ _.category_id }}",
          "description": "Filter by category ID",
          "disabled": true
        }
      ],
      "headers": [],
      "authentication": {},
      "metaSortKey": -2
    },
    {
      "_id": "req_get_service_by_id",
      "parentId": "fld_service",
      "_type": "request",
      "url": "{{ _.base_url }}/service/{{ _.service_id }}",
      "name": "Get Service by ID",
      "description": "Retrieve service by ID",
      "method": "GET",
      "body": {},
      "parameters": [],
      "headers": [],
      "authentication": {},
      "metaSortKey": -3
    },
    {
      "_id": "req_update_service",
      "parentId": "fld_service",
      "_type": "request",
      "url": "{{ _.base_url }}/service/{{ _.service_id }}",
      "name": "Update Service",
      "description": "Update existing service",
      "method": "PATCH",
      "body": {
        "mimeType": "application/json",
        "text": "{\n  \"name\": \"Premium Shoe Cleaning Updated\",\n  \"categoryId\": \"{{ _.category_id }}\",\n  \"price\": 60000,\n  \"description\": \"Updated description\",\n  \"duration\": \"3-4 hours\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {
        "type": "bearer",
        "token": "{{ _.bearer_token }}"
      },
      "metaSortKey": -4
    },
    {
      "_id": "req_delete_service",
      "parentId": "fld_service",
      "_type": "request",
      "url": "{{ _.base_url }}/service/{{ _.service_id }}",
      "name": "Delete Service",
      "description": "Soft delete service",
      "method": "DELETE",
      "body": {},
      "parameters": [],
      "headers": [],
      "authentication": {
        "type": "bearer",
        "token": "{{ _.bearer_token }}"
      },
      "metaSortKey": -5
    },
    {
      "_id": "req_restore_service",
      "parentId": "fld_service",
      "_type": "request",
      "url": "{{ _.base_url }}/service/{{ _.service_id }}/restore",
      "name": "Restore Service",
      "description": "Restore deleted service",
      "method": "PATCH",
      "body": {},
      "parameters": [],
      "headers": [],
      "authentication": {
        "type": "bearer",
        "token": "{{ _.bearer_token }}"
      },
      "metaSortKey": -6
    },
    {
      "_id": "fld_order",
      "parentId": "req_root",
      "_type": "request_group",
      "name": "Order",
      "description": "Order management endpoints"
    },
    {
      "_id": "req_create_order",
      "parentId": "fld_order",
      "_type": "request",
      "url": "{{ _.base_url }}/order",
      "name": "Create Order",
      "description": "Create a new order",
      "method": "POST",
      "body": {
        "mimeType": "application/json",
        "text": "{\n  \"orderGroupId\": \"{{ _.group_id }}\",\n  \"uniqueCode\": \"{{ _.unique_code }}\",\n  \"serviceId\": \"{{ _.service_id }}\",\n  \"status\": \"requested\",\n  \"paymentStatus\": \"unpaid\",\n  \"paymentMethod\": \"cash\",\n  \"pickupDelivery\": true,\n  \"pickupNote\": \"Pickup at lobby\",\n  \"startDate\": \"2025-09-03\",\n  \"endDate\": \"2025-09-05\",\n  \"amount\": 50000,\n  \"serviceNote\": \"Handle with care\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {
        "type": "bearer",
        "token": "{{ _.bearer_token }}"
      },
      "metaSortKey": -1
    },
    {
      "_id": "req_get_all_orders",
      "parentId": "fld_order",
      "_type": "request",
      "url": "{{ _.base_url }}/order",
      "name": "Get All Orders",
      "description": "Retrieve all orders",
      "method": "GET",
      "body": {},
      "parameters": [],
      "headers": [],
      "authentication": {
        "type": "bearer",
        "token": "{{ _.bearer_token }}"
      },
      "metaSortKey": -2
    },
    {
      "_id": "req_get_order_by_id",
      "parentId": "fld_order",
      "_type": "request",
      "url": "{{ _.base_url }}/order/{{ _.order_id }}",
      "name": "Get Order by ID",
      "description": "Retrieve order by ID",
      "method": "GET",
      "body": {},
      "parameters": [],
      "headers": [],
      "authentication": {
        "type": "bearer",
        "token": "{{ _.bearer_token }}"
      },
      "metaSortKey": -3
    },
    {
      "_id": "req_get_orders_by_group",
      "parentId": "fld_order",
      "_type": "request",
      "url": "{{ _.base_url }}/order/group/{{ _.group_id }}",
      "name": "Get Orders by Group ID",
      "description": "Retrieve orders by group ID",
      "method": "GET",
      "body": {},
      "parameters": [],
      "headers": [],
      "authentication": {
        "type": "bearer",
        "token": "{{ _.bearer_token }}"
      },
      "metaSortKey": -4
    },
    {
      "_id": "req_get_my_orders",
      "parentId": "fld_order",
      "_type": "request",
      "url": "{{ _.base_url }}/order/my-order/{{ _.group_id }}/unique-code/{{ _.unique_code }}",
      "name": "Get My Orders (No Auth)",
      "description": "Get my orders by group ID and unique code (no auth required)",
      "method": "GET",
      "body": {},
      "parameters": [],
      "headers": [],
      "authentication": {},
      "metaSortKey": -5
    },
    {
      "_id": "req_update_order",
      "parentId": "fld_order",
      "_type": "request",
      "url": "{{ _.base_url }}/order/{{ _.order_id }}",
      "name": "Update Order",
      "description": "Update existing order",
      "method": "PATCH",
      "body": {
        "mimeType": "application/json",
        "text": "{\n  \"status\": \"inProgress\",\n  \"paymentStatus\": \"paid\",\n  \"paymentMethod\": \"transfer\",\n  \"serviceNote\": \"Updated service note\"\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {
        "type": "bearer",
        "token": "{{ _.bearer_token }}"
      },
      "metaSortKey": -6
    },
    {
      "_id": "req_upload_photos",
      "parentId": "fld_order",
      "_type": "request",
      "url": "{{ _.base_url }}/order/{{ _.order_id }}/photos",
      "name": "Upload Photos",
      "description": "Upload photos (before and/or after)",
      "method": "POST",
      "body": {
        "mimeType": "multipart/form-data",
        "params": [
          {
            "name": "photos",
            "value": "",
            "description": "Photo files",
            "type": "file",
            "fileName": ""
          }
        ]
      },
      "parameters": [],
      "headers": [],
      "authentication": {
        "type": "bearer",
        "token": "{{ _.bearer_token }}"
      },
      "metaSortKey": -7
    },
    {
      "_id": "req_update_photos",
      "parentId": "fld_order",
      "_type": "request",
      "url": "{{ _.base_url }}/order/{{ _.order_id }}/photos",
      "name": "Update Photos",
      "description": "Update photos (before and/or after)",
      "method": "PATCH",
      "body": {
        "mimeType": "multipart/form-data",
        "params": [
          {
            "name": "photos",
            "value": "",
            "description": "Photo files",
            "type": "file",
            "fileName": ""
          }
        ]
      },
      "parameters": [],
      "headers": [],
      "authentication": {
        "type": "bearer",
        "token": "{{ _.bearer_token }}"
      },
      "metaSortKey": -8
    },
    {
      "_id": "req_delete_photos",
      "parentId": "fld_order",
      "_type": "request",
      "url": "{{ _.base_url }}/order/{{ _.order_id }}/photos",
      "name": "Delete Photos",
      "description": "Delete photos (before and/or after)",
      "method": "DELETE",
      "body": {
        "mimeType": "application/json",
        "text": "{\n  \"deletePhotoBefore\": true,\n  \"deletePhotoAfter\": false\n}"
      },
      "parameters": [],
      "headers": [
        {
          "name": "Content-Type",
          "value": "application/json"
        }
      ],
      "authentication": {
        "type": "bearer",
        "token": "{{ _.bearer_token }}"
      },
      "metaSortKey": -9
    },
    {
      "_id": "req_delete_order",
      "parentId": "fld_order",
      "_type": "request",
      "url": "{{ _.base_url }}/order/{{ _.order_id }}",
      "name": "Delete Order",
      "description": "Soft delete order",
      "method": "DELETE",
      "body": {},
      "parameters": [],
      "headers": [],
      "authentication": {
        "type": "bearer",
        "token": "{{ _.bearer_token }}"
      },
      "metaSortKey": -10
    },
    {
      "_id": "req_restore_order",
      "parentId": "fld_order",
      "_type": "request",
      "url": "{{ _.base_url }}/order/{{ _.order_id }}/restore",
      "name": "Restore Order",
      "description": "Restore deleted order",
      "method": "PATCH",
      "body": {},
      "parameters": [],
      "headers": [],
      "authentication": {
        "type": "bearer",
        "token": "{{ _.bearer_token }}"
      },
      "metaSortKey": -11
    }
  ]
}